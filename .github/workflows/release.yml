name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            ext: .exe
          - goos: linux
            goarch: amd64
            ext: ""
          - goos: linux
            goarch: arm64
            ext: ""
          - goos: darwin
            goarch: amd64
            ext: ""
          - goos: darwin
            goarch: arm64
            ext: ""

    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - uses: actions/checkout@v5

      - name: Cache go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Get version and git info
        id: version
        run: |
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "git_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build CLI binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          cd internal/app/dogma
          mkdir -p build
          go build \
            -ldflags="-X main.version=${{ steps.version.outputs.version }} -X main.shortHash=${{ steps.version.outputs.git_hash }}" \
            -o build/dogma.${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dogma-${{ matrix.goos }}-${{ matrix.goarch }}
          path: internal/app/dogma/build/dogma.${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - run: ls -al ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: centraldogma-go-${{ steps.version.outputs.version }}
          files: dist/*/dogma.*
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
          generate_release_notes: true
